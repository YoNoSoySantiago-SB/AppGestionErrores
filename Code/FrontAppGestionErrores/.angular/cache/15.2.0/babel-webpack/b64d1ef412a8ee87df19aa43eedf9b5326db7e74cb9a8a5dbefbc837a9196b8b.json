{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HttpServiceService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = environment.url;\n  }\n  /**\r\n  Gets an ApplicationErrorDTO object according to the given identifier.\r\n  @param idApplicationError The identifier of the application error.\r\n  @returns An Observable object containing the application error information.\r\n  */\n  getApplicationError(idApplicationError) {\n    return this.httpClient.get(this.baseUrl + \"getApplicationError/\" + idApplicationError);\n  }\n  /**\r\n  Gets a list of ActionUserDTO objects associated with the given application error.\r\n  @param idApplicationError Identifier of the application error.\r\n  @returns An Observable object containing a list of user actions associated with the application error.\r\n  */\n  getUserActions(idApplicationError) {\n    return this.httpClient.get(this.baseUrl + \"getUserActions/\" + idApplicationError);\n  }\n  /**\r\n  Gets a list of objects TrazabilityDTOCode associated with the given application error.\r\n  @param idApplicationError Identifier of the application error.\r\n  @returns An Observable object containing a list of code traces associated with the application error.\r\n  */\n  getTrazability(idApplicationError) {\n    return this.httpClient.get(this.baseUrl + \"getTrazability/\" + idApplicationError);\n  }\n}\nHttpServiceService.ɵfac = function HttpServiceService_Factory(t) {\n  return new (t || HttpServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nHttpServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HttpServiceService,\n  factory: HttpServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,6BAA6B;;;AAQzD,OAAM,MAAOC,kBAAkB;EAE7BC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAD9B,YAAO,GAAEH,WAAW,CAACI,GAAG;EACqB;EAE7C;;;;;EAKAC,mBAAmB,CAACC,kBAAyB;IAC3C,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAqB,IAAI,CAACC,OAAO,GAAC,sBAAsB,GAACF,kBAAkB,CAAC;EACxG;EAEA;;;;;EAKAG,cAAc,CAACH,kBAAyB;IACtC,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAAqB,IAAI,CAACC,OAAO,GAAC,iBAAiB,GAACF,kBAAkB,CAAC;EACnG;EAEA;;;;;EAKAI,cAAc,CAACJ,kBAAyB;IACtC,OAAO,IAAI,CAACH,UAAU,CAACI,GAAG,CAA0B,IAAI,CAACC,OAAO,GAAC,iBAAiB,GAACF,kBAAkB,CAAC;EACxG;;AA7BWL,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAU,SAAlBV,kBAAkB;EAAAW,YAFjB;AAAM","names":["environment","HttpServiceService","constructor","httpClient","url","getApplicationError","idApplicationError","get","baseUrl","getUserActions","getTrazability","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\1193033579\\Documents\\AppGestionErrores\\Code\\FrontAppGestionErrores\\src\\app\\services\\http-service.service.ts"],"sourcesContent":["import { TrazabilidadCodigoDTO } from '../model/TrazabilidadCodigoDTO.interface';\nimport { AplicacionErrorDTO } from '../model/AplicacionErrorDTO.interface';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environment/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AccionUsuarioDTO } from '../model/AccionUsuarioDTO.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpServiceService {\n  baseUrl =environment.url\n  constructor(private httpClient:HttpClient) { }\n\n  /**\n  Gets an ApplicationErrorDTO object according to the given identifier.\n  @param idApplicationError The identifier of the application error.\n  @returns An Observable object containing the application error information.\n  */\n  getApplicationError(idApplicationError:string):Observable<AplicacionErrorDTO>{ \n    return this.httpClient.get<AplicacionErrorDTO>(this.baseUrl+\"getApplicationError/\"+idApplicationError);\n  }\n\n  /**\n  Gets a list of ActionUserDTO objects associated with the given application error.\n  @param idApplicationError Identifier of the application error.\n  @returns An Observable object containing a list of user actions associated with the application error.\n  */\n  getUserActions(idApplicationError:string):Observable<AccionUsuarioDTO[]>{ \n    return this.httpClient.get<AccionUsuarioDTO[]>(this.baseUrl+\"getUserActions/\"+idApplicationError);\n  }\n\n  /**\n  Gets a list of objects TrazabilityDTOCode associated with the given application error.\n  @param idApplicationError Identifier of the application error.\n  @returns An Observable object containing a list of code traces associated with the application error.\n  */\n  getTrazability(idApplicationError:string):Observable<TrazabilidadCodigoDTO[]>{ \n    return this.httpClient.get<TrazabilidadCodigoDTO[]>(this.baseUrl+\"getTrazability/\"+idApplicationError);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}